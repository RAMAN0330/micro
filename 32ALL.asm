.MODEL SMALL
.386
.DATA
NUM1 DB 10,"Number 1 : $"
NUM2 DB 10,"Number 2 : $"
SUM DB 10,"Sum : $"
DIFF DB 10,"Difference : $"
MULT DB 10,"Multiplication : $"
DIVI DB 10,"Division : $"
.CODE
.STARTUP
MOV DX, OFFSET NUM1
MOV AH,9H
INT 21H
MOV AX,1234H
CALL DISPH
MOV AX,5678H
CALL DISPH
MOV DX,OFFSET NUM2
MOV AH,9
INT 21H
MOV AX,1234H
CALL DISPH
MOV AX,5678H
CALL DISPH;32-BIT ADDITION
MOV DX,OFFSET SUM
MOV AH,9
INT 21H
MOV BX,5678H
MOV DX,5678H
ADD BX,DX
MOV AX,1234H
MOV CX,1234H
ADC AX,CX
CALL DISPH
MOV AX,BX
CALL DISPH
;32-BIT SUBTRACTION
MOV DX,OFFSET DIFF
MOV AH,9
INT 21H
MOV BX,5678H
MOV DX,5678H
SUB BX,DX
MOV AX,1234H
MOV CX,1234H
SBB AX,CX
CALL DISPH
MOV AX,BX
CALL DISPH
;32-BIT MULTPLICATION
MOV DX,OFFSET MULT
MOV AH,9
INT 21H
MOV EAX,12345678H
MOV ECX,12345678H
MUL ECX
MOV EBX,EAX
MOV EAX,EDX
CALL DISPH_32
MOV EAX,EBX
CALL DISPH_32
;32-BIT DIVISION
MOV DX,OFFSET DIVI
MOV AH,9
INT 21H
MOV EAX,12345678H
MOV ECX,12345678H
CDQ
DIV ECX
CALL DISPH_32

mov ah,4ch
int 21h

DISPH PROC NEAR
MOV CL,4 ;to rotate by 4 bits
MOV CH,4 ;# of digit to display
DISPH1: ROL AX,CL ;ax=A628
PUSH AX
;save AX on stack
AND AL,0FH ;al=0AH
ADD AL,30H ;to convert to ASCII
CMP AL,'9' ;to get ASCII value for alphabets
JBE DISPH2 ;to get ASCII value for alphabets
ADD AL,7 ;to get ASCII value for alphabets
DISPH2: MOV AH,2H
MOV DL,AL
INT 21H
POP AX
DEC CH
JNZ DISPH1
RET
DISPH ENDP
DISPH_32 PROC NEAR
MOV CL,4
MOV CH,8
DISPH_32_1: ROL EAX,CL
PUSH EAX
AND AL,0FH
ADD AL,30H
CMP AL,'9'
JBE DISPH_32_2
ADD AL,7
DISPH_32_2:
MOV AH,2H
MOV DL,AL
INT 21H
POP EAX
DEC CH
JNZ DISPH_32_1
RET
DISPH_32 ENDP
END
Output:
